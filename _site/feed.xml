<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>张戬的博客</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 20 Apr 2017 21:27:23 +0800</pubDate>
    <lastBuildDate>Thu, 20 Apr 2017 21:27:23 +0800</lastBuildDate>
    <generator>Jekyll v3.4.1</generator>
    
      <item>
        <title>HTTP基础</title>
        <description>&lt;h1 id=&quot;http&quot;&gt;HTTP协议的用途&lt;/h1&gt;
&lt;p&gt;网页运行在HTTP(超文本传输协议)之上。这个协议支配网页浏览器如何从服务器请求文件和如何从服务器发回文件。&lt;/p&gt;
&lt;h1 id=&quot;http-1&quot;&gt;HTTP协议的运行过程&lt;/h1&gt;
&lt;p&gt;当浏览器请求一个网页时，它会发送HTTP请求消息到网页服务器。请求消息包含一些头信息，有时也会包含一些内容。网页服务器用一个回复消息来响应，它总是包含头部信息并且经常包含内容。&lt;/p&gt;
&lt;h1 id=&quot;http-2&quot;&gt;HTTP请求&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;首行
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /index.html HTTP/1.1
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    &lt;p&gt;该行指定了一个HTTP命令，叫做”方法”，紧跟着的是文档地址和所使用的HTTP版本。
这个例子中，请求使用了GET方法和HTTP1.1版本来请求index.html文档。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;头部信息
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;User-Agent: Mozilla/5.0 (Windows 2000; U) Opera 6.0 [en]
Accept: image/git, image/jpeg, text/*, */*
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    &lt;p&gt;首行过后，在请求包含的头部信息来告诉服务器该请求中额外的数据。
User-Agent头提供了浏览器的相关信息，Accept头制定了浏览器可以接受的MIME类型。在头部后面，请求包含一个空行来指明头部的结束。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;数据&lt;/p&gt;

    &lt;p&gt;针对方法可用的情况下(例如POST方法)，请求可以包含额外的数据。如果请求不包含任何数据，它将以空行结束。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;http-3&quot;&gt;HTTP响应&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;流程&lt;/p&gt;

    &lt;p&gt;网页服务器收到请求，处理它，然后发送响应。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;首行
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HTTP/1.1 200 OK
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    &lt;p&gt;这行指定了协议版本、状态码和状态码的描述。在例子中的情况下，状态码是200，意味着请求是成功的(因此描述是OK)。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;头部&lt;/p&gt;

    &lt;p&gt;在状态行后面，响应包含了给客户端额外信息的头部。例如：&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Date: Thu, 31 May 2012 14:07:50 GMT
Server: Apache/2.2.14 (Ubuntu)
Content-Type: text/html
Content-Length: 1845
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    &lt;p&gt;服务器头部提供了网页服务器软件的信息，同时Content-Type头指定这个响应数据的MIME类型。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;数据&lt;/p&gt;

    &lt;p&gt;头部过后，响应包含一个空行，紧接着是请求成功的数据。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;http-4&quot;&gt;常用HTTP方法&lt;/h1&gt;
&lt;p&gt;最常用的HTTP方法是GET和POST。GET方法用来检索信息，例如服务器上的一个文档、一张图片或一个数据库查询的结果。POST方法意指传递信息，例如要存储信用卡号码或信息到服务器数据库。GET方法等同于用户在网页浏览器上输入一个URL或单击一个链接。当用户提交一个表单时，GET和POST方法都可以用，只需为form标签指定method属性。&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;参考资料：&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://pan.baidu.com/s/1gfh3uWN&quot;&gt;«PHP编程» Kevin Tatroe  Peter Maclntyre  Rasmus Lerdorf&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 19 Apr 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/php/2017/04/19/HTTP-BASICS.html</link>
        <guid isPermaLink="true">http://localhost:4000/php/2017/04/19/HTTP-BASICS.html</guid>
        
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>代码重构:函数</title>
        <description>&lt;h1 id=&quot;section&quot;&gt;目的&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;易读&lt;/li&gt;
  &lt;li&gt;易维护&lt;/li&gt;
  &lt;li&gt;可测试&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-1&quot;&gt;方法&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;短&lt;/li&gt;
  &lt;li&gt;只做一件事&lt;/li&gt;
  &lt;li&gt;向下规则(层级)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-2&quot;&gt;参考资料：&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://pan.baidu.com/s/1hssVh20&quot;&gt;«Clean Code(代码整洁之道)» Robert C. Martin&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 14 Apr 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/refactor/2017/04/14/REFACTOR.html</link>
        <guid isPermaLink="true">http://localhost:4000/refactor/2017/04/14/REFACTOR.html</guid>
        
        
        <category>refactor</category>
        
      </item>
    
      <item>
        <title>单元测试1</title>
        <description>&lt;h1 id=&quot;section&quot;&gt;意义&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;某种意义上来说，开发会破坏系统的运行。而单元测试能保障我们不必担心对代码的修改。&lt;/li&gt;
  &lt;li&gt;代码可测试，通常意味着代码符合单一职责原则。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-1&quot;&gt;方法&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;phpunit&lt;/li&gt;
  &lt;li&gt;测试驱动开发(TDD)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-2&quot;&gt;参考资料：&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;http://www.phpunit.cn/&quot;&gt;PHPUnit中文官网&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 14 Apr 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/testunit/2017/04/14/PHPUNIT.html</link>
        <guid isPermaLink="true">http://localhost:4000/testunit/2017/04/14/PHPUNIT.html</guid>
        
        
        <category>testunit</category>
        
      </item>
    
      <item>
        <title>Vim Hotkey</title>
        <description>&lt;h1 id=&quot;section&quot;&gt;表3-1 : 移动命令&lt;/h1&gt;
&lt;p&gt;^F 往前滚动一整屏&lt;/p&gt;

&lt;p&gt;^B 往后滚动一整屏&lt;/p&gt;

&lt;p&gt;^D 往前移动半屏&lt;/p&gt;

&lt;p&gt;^U 往后移动半屏&lt;/p&gt;
</description>
        <pubDate>Tue, 11 Apr 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/vim/2017/04/11/VIM.html</link>
        <guid isPermaLink="true">http://localhost:4000/vim/2017/04/11/VIM.html</guid>
        
        
        <category>vim</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Fri, 15 Jul 2016 21:17:13 +0800</pubDate>
        <link>http://localhost:4000/jekyll/update/2016/07/15/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/update/2016/07/15/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
